Using ``BaseGeometry``
--------------------

Importing:

	>>> BaseGeometry= __import__('7-base_geometry').BaseGeometry

Case 1:

	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

Case 2:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", "5")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

Case 3:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", True)
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

Case 4:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", -5)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0


Case 5:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

Case 6:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 5)

Case 7:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Case 8:

 	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Case 9:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 1, 2)
	Traceback (most recent call last):
		...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

Case 10:

	>>> bg = BaseGeometry()
	>>> bg.area(5)
	Traceback (most recent call last):
		...
	TypeError: area() takes 1 positional argument but 2 were given

Case 11:


